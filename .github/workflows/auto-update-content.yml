name: Auto Update Content

on:
  push:
    branches: [main, master]
    paths:
      - 'articles/**'
      - 'link.md'
      - 'about.md'
      - 'config/**'
      - 'generate-rss.js'
      - 'watch-rss.js'
  workflow_dispatch:
  repository_dispatch:
    types: [content_updated]  # 必须与 A 仓库的事件类型匹配

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      articles-changed: ${{ steps.changes.outputs.articles }}
      link-changed: ${{ steps.changes.outputs.link }}
      about-changed: ${{ steps.changes.outputs.about }}
      config-changed: ${{ steps.changes.outputs.config }}
      scripts-changed: ${{ steps.changes.outputs.scripts }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # 如果是跨仓库触发，强制处理所有内容
            echo "articles=true" >> $GITHUB_OUTPUT
            echo "link=true" >> $GITHUB_OUTPUT
            echo "about=true" >> $GITHUB_OUTPUT
            echo "config=true" >> $GITHUB_OUTPUT
            echo "scripts=true" >> $GITHUB_OUTPUT
          else
            # 原有检测逻辑
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
            echo "articles=$(echo "$CHANGED_FILES" | grep -q "^articles/" && echo true || echo false)" >> $GITHUB_OUTPUT
            echo "link=$(echo "$CHANGED_FILES" | grep -q "^link.md$" && echo true || echo false)" >> $GITHUB_OUTPUT
            echo "about=$(echo "$CHANGED_FILES" | grep -q "^about.md$" && echo true || echo false)" >> $GITHUB_OUTPUT
            echo "config=$(echo "$CHANGED_FILES" | grep -q "^config/" && echo true || echo false)" >> $GITHUB_OUTPUT
            echo "scripts=$(echo "$CHANGED_FILES" | grep -E "^(generate-rss\.js|watch-rss\.js)$" && echo true || echo false)" >> $GITHUB_OUTPUT
          fi

  update-content:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: |
      needs.detect-changes.outputs.articles-changed == 'true' ||
      needs.detect-changes.outputs.link-changed == 'true' ||
      needs.detect-changes.outputs.about-changed == 'true' ||
      needs.detect-changes.outputs.config-changed == 'true' ||
      needs.detect-changes.outputs.scripts-changed == 'true'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci

      # 各处理步骤（根据变化类型执行）
      - name: Update RSS feed
        if: needs.detect-changes.outputs.articles-changed == 'true'
        run: |
          node generate-rss.js
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add atom.xml
          git commit -m "Update RSS feed" || echo "No RSS changes"

      - name: Process content
        run: |
          [ "${{ needs.detect-changes.outputs.articles-changed }}" = "true" ] && node process-content.js articles
          [ "${{ needs.detect-changes.outputs.link-changed }}" = "true" ] && node process-content.js link
          [ "${{ needs.detect-changes.outputs.about-changed }}" = "true" ] && node process-content.js about
          [ "${{ needs.detect-changes.outputs.config-changed }}" = "true" ] && node process-content.js config

      # 最终提交
      - name: Commit all changes
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update: ${{ github.event_name }}@${{ github.sha }}"
            git push
          fi

  notify:
    needs: update-content
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify result
        run: |
          echo "Result: ${{ needs.update-content.result }}"
          [ "${{ needs.update-content.result }}" = "success" ] && echo "✅ Success" || echo "❌ Failed"
